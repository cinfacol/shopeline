version: "3.9"

services:
  api:
    build:
      context: ./backend
      dockerfile: ./docker/local/django/Dockerfile
    container_name: django_api
    volumes:
      - .:/application
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - postgres-db
      # - redis
    networks:
      eline-react:
        aliases:
          - "eline_host"

  # client:
  #   build:
  #     context: ./client
  #     dockerfile: ./frontend/docker/local/Dockerfile
  #   container_name: react_client
  #   restart: on-failure
  #   volumes:
  #     - ./client:/app
  #     - /app/node_modules
  #   networks:
  #     - eline-react

  postgres-db:
    image: postgres:15.2-alpine
    container_name: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      eline-react:
        aliases:
          - "eline_host2"

networks:
  eline-react:
    name: eline-net
    driver: bridge
    ipam:
      driver: default

volumes:
  postgres_data:
  static_volume:
  media_volume:

    # redis:
    #   image: redis:6.0-alpine
    #   container_name: redis
    #   networks:
    #     - eline-react

    # celery_worker:
    #   build:
    #     context: .
    #     dockerfile: ./backend/docker/local/django/Dockerfile
    #   container_name: celery_worker
    #   command: /start-celery_worker
    #   volumes:
    #     - .:/app
    #   env_file:
    #     - .env
    #   depends_on:
    #     - redis
    #     - postgres-db
    #   networks:
    #     - eline-react

    # flower:
    #   build:
    #     context: .
    #     dockerfile: ./backend/docker/local/django/Dockerfile
    #   container_name: flower
    #   command: /start-flower
    #   volumes:
    #     - .:/app
    #   env_file:
    #     - .env
    #   ports:
    #     - "5557:5555"
    #   depends_on:
    #     - redis
    #     - postgres-db
    #   networks:
    #     - eline-react

    # nginx:
    #   restart: always
    #   depends_on:
    #     - api
    #   container_name: nginx
    #   volumes:
    #     - static_volume:/app/staticfiles
    #     - media_volume:/app/mediafiles
    #   build:
    #     context: ./backend/docker/local/nginx
    #     dockerfile: Dockerfile
    #   ports:
    #     - "8080:80"
    #   networks:
    #     - eline-react


